openapi: 3.0.0
info:
  description: This API frontends the Volumes APIs and Hosts APIs for SDSaaS
  title: SDSaaS Block Storage API
  contact: {}
  version: "1.0"
paths:
  /hosts:
    get:
      description: This request lists all hosts.
      tags:
        - Hosts
      summary: List all hosts
      parameters:
        - description: A server-provided token determining what resource to start the page
            on
          name: start
          in: query
          schema:
            type: string
        - description: The number of resources to return on a page
          name: limit
          in: query
          schema:
            type: string
        - description: Filters the collection to resources with a name property matching
            the exact specified name.
          name: name
          in: query
          schema:
            type: string
      responses:
        "200":
          description: The Hosts were retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.HostCollection"
    post:
      description: This request creates a new host from a host Template object.
      tags:
        - Hosts
      summary: Create a host
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/proper.HostTemplate"
        description: Host Template
        required: true
      responses:
        "201":
          description: Host creation request has been accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.CreatePutHost"
        "400":
          description: An invalid host object was provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
  "/hosts/{id}":
    get:
      description: This request retrieves a host specified by the identifier in the URL.
      tags:
        - Hosts
      summary: Retrieve a Host.
      parameters:
        - description: The Host identifier
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The host was retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.Host"
        "404":
          description: A host with the specified identifier could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
    delete:
      description: This request deletes a host.
      tags:
        - Hosts
      summary: Delete a Host.
      parameters:
        - description: The Host identifier
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The Host was deleted successfully.
        "404":
          description: Host with specified id not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
        "409":
          description: Host cannot be deleted as it is mapped to one or more Volume
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
    patch:
      description: This request updates a Host with the information in a provided host
        patch.
      tags:
        - Hosts
      summary: Update a given Host.
      parameters:
        - description: The host identifier
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/proper.HostPatch"
        description: Host Template
        required: true
      responses:
        "200":
          description: The Host was updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.Host"
        "400":
          description: An invalid Host patch was provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
        "404":
          description: A Host with the specified identifier could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
  "/hosts/{id}/volumes":
    delete:
      description: This request deletes all volume mappings for a host.
      tags:
        - Hosts
      summary: Deletes all the volume mappings for a given host.
      parameters:
        - description: The Host identifier
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The deletion request was accepted
        "404":
          description: The volume mapping for the specified host ID could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
  "/hosts/{id}/volumes/{vol_id}":
    put:
      description: This request creates a host to volume mapping.
      tags:
        - Hosts
      summary: Maps the given volume to the given host.
      parameters:
        - description: The host identifier
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The Volume identifier
          name: vol_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "202":
          description: Request accepted for processing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.CreatePutHost"
        "400":
          description: An invalid Host patch was provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
        "404":
          description: A Volume with the specified identifier could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
    delete:
      description: This request deletes a particular volume mapped from the host.
      tags:
        - Hosts
      summary: Deletes the given volume mapping from the host.
      parameters:
        - description: The Host identifier
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The Volume identifier
          name: vol_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The deletion request was accepted
        "404":
          description: The volume mapping with the specified identifier could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
  /volumes:
    get:
      description: This request lists all volumes.
      tags:
        - Volumes
      summary: List all Volumes
      parameters:
        - description: A server-provided token determining what resource to start the page
            on
          name: start
          in: query
          schema:
            type: string
        - description: The number of resources to return on a page
          name: limit
          in: query
          schema:
            type: string
        - description: Filters the collection to resources with a name property matching
            the exact specified name.
          name: name
          in: query
          schema:
            type: string
      responses:
        "200":
          description: The volumes were retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.VolumeCollection"
    post:
      description: This request creates a new volume from a volume Template object.
      tags:
        - Volumes
      summary: Create a Volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/proper.VolumeTemplate"
        description: Volume Template
        required: true
      responses:
        "201":
          description: Volume creation request has been accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.Volume"
        "400":
          description: An invalid volume object was provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
        "404":
          description: The specified service_instance.id not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
  "/volumes/{id}":
    get:
      description: This request retrieves a single volume specified by the identifier
        in the URL.
      tags:
        - Volumes
      summary: Retrieve a volume.
      parameters:
        - description: The volume identifier
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The volume was retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.Volume"
        "404":
          description: A volume with the specified identifier could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
    delete:
      description: This request deletes a volume.
      tags:
        - Volumes
      summary: Delete a volume.
      parameters:
        - description: The volume identifier
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The volume was deleted successfully.
        "404":
          description: Volume with specified id not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
        "409":
          description: Volume cannot be deleted as it is mapped to one or more hosts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
    patch:
      description: This request updates a volume with the information in a provided
        volume patch.
      tags:
        - Volumes
      summary: Update a volume.
      parameters:
        - description: The volume identifier
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/proper.VolumePatch"
        description: Volume Template
        required: true
      responses:
        "200":
          description: The volume was updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.Volume"
        "400":
          description: An invalid volume patch was provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
        "404":
          description: A volume with the specified identifier could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/proper.ErrorContainer"
servers:
  - url: /v1
components:
  schemas:
    proper.CreatePutHost:
      type: object
      required:
        - nqn
        - service_instance_id
      properties:
        created_at:
          description: CreatedAt The date and time that the host was created
          type: string
        id:
          description: |-
            ID The unique identifier for this host
            			   Example:
            			     "1a6b7274-678d-4dfb-8981-c71dd9d4daa5"
            		       Minimum Length: 1
            			   Maximum Length: 64
            			   Pattern: ^[-0-9a-z_]+$
          type: string
        name:
          description: >-
            Name The name for this host. The name must not be used by another
            host.
            	   If unspecified, the name will be a hyphenated list of randomly-selected words.
            	   Example:
            	     "my-host"
            	   Pattern: ^-?([a-z]|[a-z][-a-z0-9]*[a-z0-9]|[0-9][-a-z0-9]*([a-z]|[-a-z][-a-z0-9]*[a-z0-9]))$
            	   Minimum Length: 1
            	   Maximum Length: 63
          type: string
        nqn:
          description: >-
            Nqn The NQN of the host configured in customer's environment
            	   Pattern: ^nqn\.\d{4}-\d{2}\.[a-z0-9-]+(?:\.[a-z0-9-]+)*:[a-zA-Z0-9.\-:]+$
            	   Example:
            	     "nqn.2014-06.org:1234"
          type: string
        service_instance_id:
          description: |-
            ServiceInstanceID The parent service instance ID for this host.
            				   Pattern: ^[-0-9a-z_]+$
            				   Minimum Length: 1
            		   		   Maximum Length: 64
          type: string
        storage_workspace_id:
          description: >-
            StorageWorkspaceID The unique identifier  of parent storage
            workspace.
            			   Default: default
          type: string
        volume_mappings:
          type: array
          items:
            $ref: "#/components/schemas/proper.VolumeMappingInfoReference"
    proper.Error:
      type: object
      properties:
        code:
          description: |-
            Code A snake case string succinctly identifying the problem
            	   Example:
            	     "missing_value"
            	   Pattern: ^[a-z][a-z0-9]*(_[a-z0-9]+)*$
          type: string
        message:
          description: Message An explanation of the problem
          type: string
        more_info:
          description: |-
            MoreInfo Link to documentation about this error
            	   Pattern: ^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$
          type: string
        target:
          description: Target no description available
          allOf:
            - $ref: "#/components/schemas/proper.ErrorTarget"
    proper.ErrorContainer:
      type: object
      required:
        - errors
      properties:
        errors:
          description: Errors Array of errors
          type: array
          items:
            $ref: "#/components/schemas/proper.Error"
        trace:
          description: |-
            Trace Unique error identifier
            	   Example:
            	     "b1fd1314d09b7aced81414f8f0f30f9a"
            	   Pattern: ^[-0-9a-zA-Z_]+$
          type: string
    proper.ErrorTarget:
      type: object
      properties:
        name:
          description: |-
            Name The name of the problematic field, query parameter, or header
            	   Example:
            	     "Name: abc"
          type: string
        type:
          description: |-
            Type The type of input where the problem was
            	   Example:
            	     "field"
          type: string
        value:
          description: Value If present, the problematic value within the field, query
            parameter, or header
          type: string
    proper.Host:
      type: object
      required:
        - nqn
        - service_instance_id
      properties:
        created_at:
          description: CreatedAt The date and time that the host was created
          type: string
        id:
          description: |-
            ID The unique identifier for this host
            			   Example:
            			     "1a6b7274-678d-4dfb-8981-c71dd9d4daa5"
            		       Minimum Length: 1
            			   Maximum Length: 64
            			   Pattern: ^[-0-9a-z_]+$
          type: string
        name:
          description: >-
            Name The name for this host. The name must not be used by another
            host.
            	   If unspecified, the name will be a hyphenated list of randomly-selected words.
            	   Example:
            	     "my-host"
            	   Pattern: ^-?([a-z]|[a-z][-a-z0-9]*[a-z0-9]|[0-9][-a-z0-9]*([a-z]|[-a-z][-a-z0-9]*[a-z0-9]))$
            	   Minimum Length: 1
            	   Maximum Length: 63
          type: string
        nqn:
          description: >-
            Nqn The NQN of the host configured in customer's environment
            	   Pattern: ^nqn\.\d{4}-\d{2}\.[a-z0-9-]+(?:\.[a-z0-9-]+)*:[a-zA-Z0-9.\-:]+$
            	   Example:
            	     "nqn.2014-06.org:1234"
          type: string
        service_instance_id:
          description: |-
            ServiceInstanceID The parent service instance ID for this host.
            				   Pattern: ^[-0-9a-z_]+$
            				   Minimum Length: 1
            		   		   Maximum Length: 64
          type: string
        storage_workspace_id:
          description: >-
            StorageWorkspaceID The unique identifier  of parent storage
            workspace.
            			   Default: default
          type: string
        volume_mappings:
          type: array
          items:
            $ref: "#/components/schemas/proper.VolumeMappingReference"
    proper.HostCollection:
      type: object
      required:
        - first
        - hosts
      properties:
        first:
          description: First A link to the first page of resources
          allOf:
            - $ref: "#/components/schemas/proper.PageLink"
        hosts:
          description: Host Collection of hosts
          type: array
          items:
            $ref: "#/components/schemas/proper.Host"
        limit:
          description: >-
            Limit The maximum number of resources that can be returned by the
            request
            	   Example:
            	     20
          type: integer
        next:
          description: >-
            Next A link to the next page of resources. This property is present
            for all pages
            	   except the last page
          allOf:
            - $ref: "#/components/schemas/proper.PageLink"
        total_count:
          description: |-
            TotalCount The total number of resources across all pages
            	   Example:
            	     132
          type: integer
    proper.HostMapping:
      type: object
      properties:
        host_id:
          description: HostID Unique identifer of the host
          type: string
        host_name:
          description: HostName Unique Name of the Host
          type: string
        host_nqn:
          description: HostNQN The NQN of the host configured in customer's environment
          type: string
    proper.HostPatch:
      type: object
      properties:
        name:
          description: >-
            Name The name for this Host. The name must not be used by another
            host.
            	   Example:
            	     "my-host"
            	   Minimum Length: 1
            	   Maximum Length: 63
            	   Pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
          type: string
    proper.HostTemplate:
      type: object
      required:
        - nqn
      properties:
        name:
          description: >-
            Name The name for this host. The name must not be used by another
            host.
            	   If unspecified, the name will be a hyphenated list of randomly-selected words.
            	   Example:
            	     "my-host"
            	   Pattern: ^-?([a-z]|[a-z][-a-z0-9]*[a-z0-9]|[0-9][-a-z0-9]*([a-z]|[-a-z][-a-z0-9]*[a-z0-9]))$
            	   Minimum Length: 1
            	   Maximum Length: 63
          type: string
        nqn:
          description: >-
            Nqn The NQN of the host configured in customer's environment
            	   Pattern: ^nqn\.\d{4}-\d{2}\.[a-z0-9-]+(?:\.[a-z0-9-]+)*:[a-zA-Z0-9.\-:]+$
            	   Example:
            	     "nqn.2014-06.org:1234"
          type: string
        volume_mappings:
          description: >-
            VolumeMapping The unique identifier  of the volume to be mapped to
            this host
            				   Example:
            		     		{
            		     		 "volume_id": "1a6b7274-678d-4dfb-8981-c71dd9d4daa5"
            		    		}
          type: array
          items:
            $ref: "#/components/schemas/proper.VolumeMappingIdentity"
    proper.NetworkInfoReference:
      type: object
      properties:
        gateway_ip:
          type: string
        port:
          type: integer
    proper.PageLink:
      type: object
      properties:
        href:
          description: |-
            Href The URL for a page of resources
            	   Pattern: ^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$
          type: string
    proper.StorageIdentifiersReference:
      type: object
      properties:
        id:
          type: string
        namespace_id:
          type: integer
        network_info:
          type: array
          items:
            $ref: "#/components/schemas/proper.NetworkInfoReference"
    proper.Volume:
      type: object
      required:
        - health_reasons
        - host_mappings
        - service_instance_id
        - status_reasons
        - storage_workspace_id
      properties:
        adjustable_iops_supported:
          description: AdjustableIopsSupported Indicates whether this volume supports
            adjustable IOPS.
          type: boolean
        bandwidth:
          description: >-
            Bandwidth The maximum bandwidth (in megabits per second) for the
            volume
            	   Example:
            	     1000
          type: integer
        capacity:
          description: |-
            Capacity The capacity of the volume (in gigabytes).
            	   Example:
            	     30
          type: integer
        created_at:
          description: CreatedAt The date and time that the volume was created
          type: string
        health_reasons:
          description: >-
            HealthReasons The reasons for the current `health_state` (if any).

            	   The enumerated reason code values for this property will expand in the future. When
            	   processing this property, check for and log unknown values. Optionally halt processing
            	   and surface the error, or bypass the resource on which the unexpected reason code was
            	   encountered.
          type: array
          items:
            $ref: "#/components/schemas/proper.VolumeHealthReason"
        health_state:
          description: HealthState no description available
          type: string
        host_mappings:
          description: HostMappings List of Host Details that volume is mapped
          type: array
          items:
            $ref: "#/components/schemas/proper.HostMapping"
        id:
          description: |-
            ID The unique identifier for this volume
            			   Example:
            			     "1a6b7274-678d-4dfb-8981-c71dd9d4daa5"
            		       Minimum Length: 1
            			   Maximum Length: 64
            			   Pattern: ^[-0-9a-z_]+$
          type: string
        iops:
          description: |-
            Iops The maximum I/O operations per second (IOPS) for this volume.
            	   Example:
            	     10000
          type: integer
        name:
          description: >-
            Name The name for this volume. The name is unique across all
            volumes.
            	   Example:
            	     "my-volume"
            	   Pattern: ^-?([a-z]|[a-z][-a-z0-9]*[a-z0-9]|[0-9][-a-z0-9]*([a-z]|[-a-z][-a-z0-9]*[a-z0-9]))$
            	   Minimum Length: 1
            	   Maximum Length: 63
          type: string
        profile:
          description: Profile for this volume.
          allOf:
            - $ref: "#/components/schemas/proper.VolumeProfileReference"
        resource_type:
          description: |-
            ResourceType The resource type
            	   Pattern: ^[a-z][a-z0-9]*(_[a-z0-9]+)*$
            	   Example:
            	     "volume"
          type: string
        service_instance_id:
          description: |-
            ServiceInstanceID InstanceID for this Volume.
            				   Pattern: ^[-0-9a-z_]+$
            				   Minimum Length: 1
            		   		   Maximum Length: 64
          type: string
        status:
          description: >-
            Status The status of the volume.

            	   The enumerated values for this property will expand in the future. When
            	   processing this property, check for and log unknown values. Optionally halt
            	   processing and surface the error, or bypass the volume on which the unexpected
            	   property value was encountered.
            	   Example:
            	     "available"
          type: string
        status_reasons:
          description: >-
            StatusReasons The reasons for the current status (if any).

            	   The enumerated reason code values for this property will expand in the future. When
            	   processing this property, check for and log unknown values. Optionally halt processing
            	   and surface the error, or bypass the resource on which the unexpected reason code was
            	   encountered.
          type: array
          items:
            $ref: "#/components/schemas/proper.VolumeStatusReason"
        storage_workspace_id:
          description: |-
            StorageWorkspaceID WorkspaceID for this volume.
            			   Default: default
          type: string
    proper.VolumeCollection:
      type: object
      required:
        - first
        - volumes
      properties:
        first:
          description: First A link to the first page of resources
          allOf:
            - $ref: "#/components/schemas/proper.PageLink"
        limit:
          description: >-
            Limit The maximum number of resources that can be returned by the
            request
            	   Example:
            	     20
          type: integer
        next:
          description: >-
            Next A link to the next page of resources. This property is present
            for all pages
            	   except the last page
          allOf:
            - $ref: "#/components/schemas/proper.PageLink"
        total_count:
          description: |-
            TotalCount The total number of resources across all pages
            	   Example:
            	     132
          type: integer
        volumes:
          description: Volumes Collection of volumes
          type: array
          items:
            $ref: "#/components/schemas/proper.Volume"
    proper.VolumeHealthReason:
      type: object
      properties:
        code:
          description: >-
            Code A snake case string succinctly identifying the reason for this
            health state.
            	   Example:
            	     "insufficient_instance_bandwidth"
            	   Pattern: ^[a-z][a-z0-9]*(_[a-z0-9]+)*$
          type: string
        message:
          description: >-
            Message An explanation of the reason for this health state.
            	   Example:
            	     "Performance will be degraded while this volume is Insufficient Instance Bandwidth"
          type: string
    proper.VolumeMappingIdentity:
      type: object
      required:
        - volume_id
      properties:
        volume_id:
          description: VolumeID The Volume ID that need to be mapped with Host
          type: string
    proper.VolumeMappingInfoReference:
      type: object
      required:
        - volume_id
        - volume_name
      properties:
        status:
          type: string
        volume_id:
          description: VolumeID The Volume ID that need to be mapped with Host
          type: string
        volume_name:
          type: string
    proper.VolumeMappingReference:
      type: object
      required:
        - volume_id
        - volume_name
      properties:
        status:
          type: string
        storage_identifiers:
          $ref: "#/components/schemas/proper.StorageIdentifiersReference"
        volume_id:
          description: VolumeID The Volume ID that need to be mapped with Host
          type: string
        volume_name:
          type: string
    proper.VolumePatch:
      type: object
      properties:
        capacity:
          description: >-
            Capacity The capacity to use for the volume (in gigabytes).
            	   Additionally:
            	   - The specified value must not be less than the current capacity.
            	   - The specified value must not exceed the `capacity.max` of the volume profile.
            	   Example:
            	     100
          type: integer
        name:
          description: >-
            Name The name for this volume. The name must not be used by another
            volume.
            	   Example:
            	     "my-volume"
            	   Minimum Length: 1
            	   Maximum Length: 63
            	   Pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
          type: string
    proper.VolumeProfileIdentity:
      type: object
      properties:
        name:
          description: |-
            Name The globally unique name for this volume profile
            	   Example:
            	     "sds-general-purpose"
          type: string
    proper.VolumeProfileReference:
      type: object
      properties:
        name:
          description: >-
            Name The globally unique name for this volume profile
            	   Example:
            	     "sds-general-purpose"
            	   Pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9]|[0-9][-a-z0-9]*([a-z]|[-a-z][-a-z0-9]*[a-z0-9]))$
          type: string
    proper.VolumeStatusReason:
      type: object
      properties:
        code:
          description: |-
            Code A snake case string succinctly identifying the status reason
            	   Example:
            	     "volume not found"
            	   Pattern: ^[a-z]+(_[a-z]+)*$
          type: string
        message:
          description: Message An explanation of the status reason
          type: string
        more_info:
          description: |-
            MoreInfo Link to documentation about this status reason

            	   Pattern: ^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$
          type: string
    proper.VolumeTemplate:
      type: object
      required:
        - capacity
      properties:
        capacity:
          description: >-
            Capacity The capacity to use for the volume (in gigabytes). The
            specified value must be within
            	   the `capacity` range of the volume's profile.
            	   Example:
            	     40
          type: integer
        name:
          description: >-
            Name The name for this volume. The name must not be used by another
            volume.
            	   If unspecified, the name will be a hyphenated list of randomly-selected words.
            	   Example:
            	     "my-volume"
            	   Pattern: ^-?([a-z]|[a-z][-a-z0-9]*[a-z0-9]|[0-9][-a-z0-9]*([a-z]|[-a-z][-a-z0-9]*[a-z0-9]))$
            	   Minimum Length: 1
            	   Maximum Length: 63
          type: string
        profile:
          description: |-
            Profile use for this volume.
            	   Example:
            	     {
            	       "name": "sds-general-purpose"
            	     }
          allOf:
            - $ref: "#/components/schemas/proper.VolumeProfileIdentity"
